// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/type/http_request.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - HTTPRequestRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface HTTPRequestRoot : GPBRootObject
@end

#pragma mark - HttpRequest

typedef GPB_ENUM(HttpRequest_FieldNumber) {
  HttpRequest_FieldNumber_RequestMethod = 1,
  HttpRequest_FieldNumber_RequestURL = 2,
  HttpRequest_FieldNumber_RequestSize = 3,
  HttpRequest_FieldNumber_Status = 4,
  HttpRequest_FieldNumber_ResponseSize = 5,
  HttpRequest_FieldNumber_UserAgent = 6,
  HttpRequest_FieldNumber_RemoteIp = 7,
  HttpRequest_FieldNumber_Referer = 8,
  HttpRequest_FieldNumber_CacheHit = 9,
  HttpRequest_FieldNumber_CacheValidatedWithOriginServer = 10,
  HttpRequest_FieldNumber_CacheLookup = 11,
  HttpRequest_FieldNumber_CacheFillBytes = 12,
  HttpRequest_FieldNumber_ServerIp = 13,
};

/// A common proto for logging HTTP requests.
@interface HttpRequest : GPBMessage

/// The request method. Examples: `"GET"`, `"HEAD"`, `"PUT"`, `"POST"`.
@property(nonatomic, readwrite, copy, null_resettable) NSString *requestMethod;

/// The scheme (http, https), the host name, the path and the query
/// portion of the URL that was requested.
/// Example: `"http://example.com/some/info?color=red"`.
@property(nonatomic, readwrite, copy, null_resettable) NSString *requestURL;

/// The size of the HTTP request message in bytes, including the request
/// headers and the request body.
@property(nonatomic, readwrite) int64_t requestSize;

/// The response code indicating the status of response.
/// Examples: 200, 404.
@property(nonatomic, readwrite) int32_t status;

/// The size of the HTTP response message sent back to the client, in bytes,
/// including the response headers and the response body.
@property(nonatomic, readwrite) int64_t responseSize;

/// The user agent sent by the client. Example:
/// `"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)"`.
@property(nonatomic, readwrite, copy, null_resettable) NSString *userAgent;

/// The IP address (IPv4 or IPv6) of the client that issued the HTTP
/// request. Examples: `"192.168.1.1"`, `"FE80::0202:B3FF:FE1E:8329"`.
@property(nonatomic, readwrite, copy, null_resettable) NSString *remoteIp;

/// The IP address (IPv4 or IPv6) of the origin server that the request was
/// sent to.
@property(nonatomic, readwrite, copy, null_resettable) NSString *serverIp;

/// The referer URL of the request, as defined in
/// [HTTP/1.1 Header Field Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
@property(nonatomic, readwrite, copy, null_resettable) NSString *referer;

/// Whether or not a cache lookup was attempted.
@property(nonatomic, readwrite) BOOL cacheLookup;

/// Whether or not an entity was served from cache
/// (with or without validation).
@property(nonatomic, readwrite) BOOL cacheHit;

/// Whether or not the response was validated with the origin server before
/// being served from cache. This field is only meaningful if `cache_hit` is
/// True.
@property(nonatomic, readwrite) BOOL cacheValidatedWithOriginServer;

/// The number of HTTP response bytes inserted into cache. Set only when a
/// cache fill was attempted.
@property(nonatomic, readwrite) int64_t cacheFillBytes;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
