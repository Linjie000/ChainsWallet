// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/billing.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BillingStatusRule;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - BillingRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface BillingRoot : GPBRootObject
@end

#pragma mark - Billing

typedef GPB_ENUM(Billing_FieldNumber) {
  Billing_FieldNumber_MetricsArray = 1,
  Billing_FieldNumber_RulesArray = 5,
};

/// Billing related configuration of the service.
///
/// The following example shows how to configure metrics for billing:
///
///     metrics:
///     - name: library.googleapis.com/read_calls
///       metric_kind: DELTA
///       value_type: INT64
///     - name: library.googleapis.com/write_calls
///       metric_kind: DELTA
///       value_type: INT64
///     billing:
///       metrics:
///       - library.googleapis.com/read_calls
///       - library.googleapis.com/write_calls
///
/// The next example shows how to enable billing status check and customize the
/// check behavior. It makes sure billing status check is included in the `Check`
/// method of [Service Control API](https://cloud.google.com/service-control/).
/// In the example, "google.storage.Get" method can be served when the billing
/// status is either `current` or `delinquent`, while "google.storage.Write"
/// method can only be served when the billing status is `current`:
///
///     billing:
///       rules:
///       - selector: google.storage.Get
///         allowed_statuses:
///         - current
///         - delinquent
///       - selector: google.storage.Write
///         allowed_statuses: current
///
/// Mostly services should only allow `current` status when serving requests.
/// In addition, services can choose to allow both `current` and `delinquent`
/// statuses when serving read-only requests to resources. If there's no
/// matching selector for operation, no billing status check will be performed.
@interface Billing : GPBMessage

/// Names of the metrics to report to billing. Each name must
/// be defined in [Service.metrics][google.api.Service.metrics] section.
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *metricsArray;
/// The number of items in @c metricsArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger metricsArray_Count;

/// A list of billing status rules for configuring billing status check.
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<BillingStatusRule*> *rulesArray;
/// The number of items in @c rulesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger rulesArray_Count;

@end

#pragma mark - BillingStatusRule

typedef GPB_ENUM(BillingStatusRule_FieldNumber) {
  BillingStatusRule_FieldNumber_Selector = 1,
  BillingStatusRule_FieldNumber_AllowedStatusesArray = 2,
};

/// Defines the billing status requirements for operations.
///
/// When used with
/// [Service Control API](https://cloud.google.com/service-control/), the
/// following statuses are supported:
///
/// - **current**: the associated billing account is up to date and capable of
///                paying for resource usages.
/// - **delinquent**: the associated billing account has a correctable problem,
///                   such as late payment.
///
/// Mostly services should only allow `current` status when serving requests.
/// In addition, services can choose to allow both `current` and `delinquent`
/// statuses when serving read-only requests to resources. If the list of
/// allowed_statuses is empty, it means no billing requirement.
@interface BillingStatusRule : GPBMessage

/// Selects the operation names to which this rule applies.
/// Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
@property(nonatomic, readwrite, copy, null_resettable) NSString *selector;

/// Allowed billing statuses. The billing status check passes if the actual
/// billing status matches any of the provided values here.
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *allowedStatusesArray;
/// The number of items in @c allowedStatusesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger allowedStatusesArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
