// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/system_parameter.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class SystemParameter;
@class SystemParameterRule;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - SystemParameterRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface SystemParameterRoot : GPBRootObject
@end

#pragma mark - SystemParameters

typedef GPB_ENUM(SystemParameters_FieldNumber) {
  SystemParameters_FieldNumber_RulesArray = 1,
};

/// ### System parameter configuration
///
/// A system parameter is a special kind of parameter defined by the API
/// system, not by an individual API. It is typically mapped to an HTTP header
/// and/or a URL query parameter. This configuration specifies which methods
/// change the names of the system parameters.
@interface SystemParameters : GPBMessage

/// Define system parameters.
///
/// The parameters defined here will override the default parameters
/// implemented by the system. If this field is missing from the service
/// config, default system parameters will be used. Default system parameters
/// and names is implementation-dependent.
///
/// Example: define api key and alt name for all methods
///
/// SystemParameters
///   rules:
///     - selector: "*"
///       parameters:
///         - name: api_key
///           url_query_parameter: api_key
///         - name: alt
///           http_header: Response-Content-Type
///
/// Example: define 2 api key names for a specific method.
///
/// SystemParameters
///   rules:
///     - selector: "/ListShelves"
///       parameters:
///         - name: api_key
///           http_header: Api-Key1
///         - name: api_key
///           http_header: Api-Key2
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SystemParameterRule*> *rulesArray;
/// The number of items in @c rulesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger rulesArray_Count;

@end

#pragma mark - SystemParameterRule

typedef GPB_ENUM(SystemParameterRule_FieldNumber) {
  SystemParameterRule_FieldNumber_Selector = 1,
  SystemParameterRule_FieldNumber_ParametersArray = 2,
};

/// Define a system parameter rule mapping system parameter definitions to
/// methods.
@interface SystemParameterRule : GPBMessage

/// Selects the methods to which this rule applies. Use '*' to indicate all
/// methods in all APIs.
///
/// Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
@property(nonatomic, readwrite, copy, null_resettable) NSString *selector;

/// Define parameters. Multiple names may be defined for a parameter.
/// For a given method call, only one of them should be used. If multiple
/// names are used the behavior is implementation-dependent.
/// If none of the specified names are present the behavior is
/// parameter-dependent.
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SystemParameter*> *parametersArray;
/// The number of items in @c parametersArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger parametersArray_Count;

@end

#pragma mark - SystemParameter

typedef GPB_ENUM(SystemParameter_FieldNumber) {
  SystemParameter_FieldNumber_Name = 1,
  SystemParameter_FieldNumber_HTTPHeader = 2,
  SystemParameter_FieldNumber_URLQueryParameter = 3,
};

/// Define a parameter's name and location. The parameter may be passed as either
/// an HTTP header or a URL query parameter, and if both are passed the behavior
/// is implementation-dependent.
@interface SystemParameter : GPBMessage

/// Define the name of the parameter, such as "api_key", "alt", "callback",
/// and etc. It is case sensitive.
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/// Define the HTTP header name to use for the parameter. It is case
/// insensitive.
@property(nonatomic, readwrite, copy, null_resettable) NSString *HTTPHeader;

/// Define the URL query parameter name to use for the parameter. It is case
/// sensitive.
@property(nonatomic, readwrite, copy, null_resettable) NSString *URLQueryParameter;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
