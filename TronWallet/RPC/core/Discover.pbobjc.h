// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/Discover.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Endpoint;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - DiscoverRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface DiscoverRoot : GPBRootObject
@end

#pragma mark - Endpoint

typedef GPB_ENUM(Endpoint_FieldNumber) {
  Endpoint_FieldNumber_Address = 1,
  Endpoint_FieldNumber_Port = 2,
  Endpoint_FieldNumber_NodeId = 3,
};

@interface Endpoint : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *address;

@property(nonatomic, readwrite) int32_t port;

@property(nonatomic, readwrite, copy, null_resettable) NSData *nodeId;

@end

#pragma mark - PingMessage

typedef GPB_ENUM(PingMessage_FieldNumber) {
  PingMessage_FieldNumber_From = 1,
  PingMessage_FieldNumber_To = 2,
  PingMessage_FieldNumber_Version = 3,
  PingMessage_FieldNumber_Timestamp = 4,
};

@interface PingMessage : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Endpoint *from;
/// Test to see if @c from has been set.
@property(nonatomic, readwrite) BOOL hasFrom;

@property(nonatomic, readwrite, strong, null_resettable) Endpoint *to;
/// Test to see if @c to has been set.
@property(nonatomic, readwrite) BOOL hasTo;

@property(nonatomic, readwrite) int32_t version;

@property(nonatomic, readwrite) int64_t timestamp;

@end

#pragma mark - PongMessage

typedef GPB_ENUM(PongMessage_FieldNumber) {
  PongMessage_FieldNumber_From = 1,
  PongMessage_FieldNumber_Echo = 2,
  PongMessage_FieldNumber_Timestamp = 3,
};

@interface PongMessage : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Endpoint *from;
/// Test to see if @c from has been set.
@property(nonatomic, readwrite) BOOL hasFrom;

@property(nonatomic, readwrite) int32_t echo;

@property(nonatomic, readwrite) int64_t timestamp;

@end

#pragma mark - FindNeighbours

typedef GPB_ENUM(FindNeighbours_FieldNumber) {
  FindNeighbours_FieldNumber_From = 1,
  FindNeighbours_FieldNumber_TargetId = 2,
  FindNeighbours_FieldNumber_Timestamp = 3,
};

@interface FindNeighbours : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Endpoint *from;
/// Test to see if @c from has been set.
@property(nonatomic, readwrite) BOOL hasFrom;

@property(nonatomic, readwrite, copy, null_resettable) NSData *targetId;

@property(nonatomic, readwrite) int64_t timestamp;

@end

#pragma mark - Neighbours

typedef GPB_ENUM(Neighbours_FieldNumber) {
  Neighbours_FieldNumber_From = 1,
  Neighbours_FieldNumber_NeighboursArray = 2,
  Neighbours_FieldNumber_Timestamp = 3,
};

@interface Neighbours : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Endpoint *from;
/// Test to see if @c from has been set.
@property(nonatomic, readwrite) BOOL hasFrom;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Endpoint*> *neighboursArray;
/// The number of items in @c neighboursArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger neighboursArray_Count;

@property(nonatomic, readwrite) int64_t timestamp;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
